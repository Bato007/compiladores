A
      GP[0] = 0
   A
   A
      GP[0] = GP[8]
   A
   A
     	lw $t1, 8($gp)
     	lw $t2, 12($gp)
     	add $t3, $t1, $t2
     	sw $t3, A-method2-t3($gp)
      GP[8] = A-method2-t3
      set_var
            PARAM GP[8]
            A-method2-t3 = CALL set_var
   A
      GP[8] = ~GP[8]
      set_var
            PARAM GP[8]
            A-method3-t1 = CALL set_var
   A
     	lw $t1, 12($gp)
     	lw $t2, 8($gp)
     	A-method4-t3 = t1<t2
	if A-method4-t3 goto L1
	goto L2
	L1
     	lw $t4, 8($gp)
     	lw $t5, 12($gp)
     	A-method4-t6 = t4-t5
      GP[8] = A-method4-t6
      set_var
            PARAM GP[8]
            A-method4-t6 = CALL set_var
	L2
     	lw $t7, 12($gp)
     	lw $t8, 8($gp)
     	A-method4-t9 = t7-t8
      GP[8] = A-method4-t9
      set_var
            PARAM GP[8]
            A-method4-t9 = CALL set_var
	END_L2
   A
	L1
     	lw $t1, 8($gp)
     	lw $t2, 8($gp)
     	A-method5-t3 = t1<=t2
	if A-method5-t3 goto L2
	goto END_L1
	L2
     	lw $t4, 8($gp)
     	lw $t5, 8($gp)
     	A-method5-t6 = t4*t5
      GP[8] = A-method5-t6
     	lw $t6, 8($gp)
     	addi $t7, $t6, 1
     	sw $t7, A-method5-t7($gp)
      GP[8] = A-method5-t7
	END_L2
	goto L1
	END_L1
      set_var
            PARAM GP[8]
            A-method5-t7 = CALL set_var
B
   B
     	lw $t1, 8($gp)
     	lw $t2, 8($gp)
     	B-method5-t3 = t1*t2
      GP[8] = B-method5-t3
      set_var
            PARAM GP[8]
            B-method5-t3 = CALL set_var
C
   C
      GP[8] = ~GP[8]
      set_var
            PARAM GP[8]
            C-method6-t1 = CALL set_var
   C
     	lw $t1, 8($gp)
     	lw $t2, 8($gp)
     	C-method5-t3 = t1*t2
     	lw $t4, 8($gp)
     	C-method5-t5 = C-method5-t3*t4
      GP[8] = C-method5-t5
      set_var
            PARAM GP[8]
            C-method5-t5 = CALL set_var
D
   D
     	lw $t1, 8($gp)
     	D-method7-t2 = t1<0
	if D-method7-t2 goto L1
	goto L2
	L1
      method7
            PARAM ~GP[8]
            D-method7-t3 = CALL method7
	L2
     	lw $t4, 8($gp)
     	D-method7-t5 = 0=t4
	if D-method7-t6 goto L3
	goto L4
	L3
	L4
     	lw $t7, 8($gp)
     	D-method7-t8 = 1=t7
	if D-method7-t9 goto L5
	goto L6
	L5
	L6
     	lw $t10, 8($gp)
     	D-method7-t11 = 2=t10
	if D-method7-t12 goto L7
	goto L8
	L7
	L8
     	lw $t13, 8($gp)
     	D-method7-t14 = t13-3
      method7
            PARAM D-method7-t14
            D-method7-t15 = CALL method7
	END_L8
	END_L6
	END_L4
	END_L2
E
   E
     	lw $t1, 8($gp)
     	div $t1, 8
     	mflo $t2
     	sw $t2, E-method6-t2($gp)
      GP[8] = E-method6-t2
      set_var
            PARAM GP[8]
            E-method6-t2 = CALL set_var
Main
      GP[0] = String
      GP[16] = A
      GP[176] = A
      GP[336] = true
   Main
     	lw $t1, 8($gp)
     	Main-is_even-t2 = t1<0
	if Main-is_even-t2 goto L1
	goto L2
	L1
      is_even
            PARAM ~GP[8]
            Main-is_even-t3 = CALL is_even
	L2
     	lw $t4, 8($gp)
     	Main-is_even-t5 = 0=t4
	if Main-is_even-t6 goto L3
	goto L4
	L3
	L4
     	lw $t7, 8($gp)
     	Main-is_even-t8 = 1=t7
	if Main-is_even-t9 goto L5
	goto L6
	L5
	L6
     	lw $t10, 8($gp)
     	Main-is_even-t11 = t10-2
      is_even
            PARAM Main-is_even-t11
            Main-is_even-t12 = CALL is_even
	END_L6
	END_L4
	END_L2
   Main
      GP[16] = (newA)
      set_var
            PARAM 2
            Main-main-t1 = CALL set_var
      value
            Main-main-t2 = CALL value
      out_int
            PARAM Main-main-t2
            Main-main-t3 = CALL out_int
      value
            Main-main-t4 = CALL value
      is_even
            PARAM Main-main-t4
            Main-main-t5 = CALL is_even
	if Main-main-t5 goto L1
	goto L2
	L1
      out_string
            PARAM " es par!\n"
            Main-main-t6 = CALL out_string
	L2
      out_string
            PARAM " es impar!\n"
            Main-main-t7 = CALL out_string
	END_L2
      set_var
            PARAM 3
            Main-main-t8 = CALL set_var
      GP[176] = Main-main-t8
      value
            Main-main-t8 = CALL value
      value
            Main-main-t9 = CALL value
      method2
            PARAM avar.value()
            PARAM Main-main-t9
            Main-main-t10 = CALL method2
      GP[16] = Main-main-t10
      value
            Main-main-t10 = CALL value
      out_int
            PARAM Main-main-t10
            Main-main-t11 = CALL out_int
      out_string
            PARAM "\n"
            Main-main-t12 = CALL out_string
      value
            Main-main-t13 = CALL value
      method6
            PARAM Main-main-t13
            Main-main-t14 = CALL method6
      GP[16] = Main-main-t14
      value
            Main-main-t14 = CALL value
      out_int
            PARAM Main-main-t14
            Main-main-t15 = CALL out_int
      out_string
            PARAM "\n"
            Main-main-t16 = CALL out_string
      set_var
            PARAM 5
            Main-main-t17 = CALL set_var
      GP[176] = Main-main-t17
      value
            Main-main-t17 = CALL value
      value
            Main-main-t18 = CALL value
      method4
            PARAM avar.value()
            PARAM Main-main-t18
            Main-main-t19 = CALL method4
      GP[16] = Main-main-t19
      value
            Main-main-t19 = CALL value
      out_int
            PARAM Main-main-t19
            Main-main-t20 = CALL out_int
      out_string
            PARAM "\n"
            Main-main-t21 = CALL out_string
      set_var
            PARAM 5
            Main-main-t22 = CALL set_var
      value
            Main-main-t23 = CALL value
      method5
            PARAM Main-main-t23
            Main-main-t24 = CALL method5
      GP[16] = Main-main-(newC)@t24
      value
            Main-main-t24 = CALL value
      out_int
            PARAM Main-main-t24
            Main-main-t25 = CALL out_int
      out_string
            PARAM "\n"
            Main-main-t26 = CALL out_string
      set_var
            PARAM 6
            Main-main-t27 = CALL set_var
      value
            Main-main-t28 = CALL value
      method5
            PARAM Main-main-t28
            Main-main-t29 = CALL method5
      GP[16] = Main-main-(newC)@t29
      value
            Main-main-t29 = CALL value
      out_int
            PARAM Main-main-t29
            Main-main-t30 = CALL out_int
      out_string
            PARAM "\n"
            Main-main-t31 = CALL out_string
