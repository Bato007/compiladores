(* this is a comment *)
class B {
  s : String <- "Hello";
  g(y:String) : Int {
    y.concat(s)
  };
  f(x:Int) : Int {
    x+1
  };
};

class DB {
  -- this is another comment
  s : B <- "Hello";
  g(y:String) : Int {
    y.concat(s)
  };
};

class Pa {
  -- this is another comment
  fa(y:String, point: Dot): Int { 1 + point.x };
  fa2(y:String, point: Dot): Int { 1 + point.x(1, 3) };
};

class Ca inherits Pa {
fa(): String { 
  -- this is another comment
  "1"
};
};

(* 
  this
  is
  a
  comment 
*)

class Pa {
  fa(): Int { 1+1-3*2/3; "cualquier cosa"; };
};

class Cons inherits List {

car : Int;   -- The element in this list cell

cdr : List;  -- The rest of the list

isNil() : Bool { false };

head()  : Int { car };

tail()  : List { cdr };

init(i : Int, rest : List) : List {
    {
    car <- i;
    cdr <- rest;
    -- out_string("\n");
    self;
    }
};

};